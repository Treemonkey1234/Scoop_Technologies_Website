(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6303],{3735:(e,t,o)=>{"use strict";o.d(t,{Pz:()=>n,bR:()=>r,lV:()=>a});let r={ACCESS_TOKEN:o(9509).env.NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN||"pk.eyJ1IjoidHJlZW1vbmtleTQ1NiIsImEiOiJjbWMwc3FodnIwNjJ6MmxwdWtpamFkbjVyIn0._yMY5crJh7ujrwoxkm3EVw",STYLES:{LIGHT:"mapbox://styles/mapbox/light-v11",STREETS:"mapbox://styles/mapbox/streets-v12",SATELLITE:"mapbox://styles/mapbox/satellite-v9"},DEFAULTS:{ZOOM:13,COORDINATE_PRECISION:6,CLUSTER_RADIUS:50,CLUSTER_MAX_ZOOM:14},API:{GEOCODING:"https://api.mapbox.com/geocoding/v5/mapbox.places",DIRECTIONS:"https://api.mapbox.com/directions/v5/mapbox",ISOCHRONE:"https://api.mapbox.com/isochrone/v1/mapbox",MATRIX:"https://api.mapbox.com/directions-matrix/v1/mapbox"}},i=null,s=null;async function a(){return i||s||(s=(async()=>{try{console.log("\uD83D\uDDFA️ Initializing Mapbox GL (singleton)");let e=(await o.e(240).then(o.t.bind(o,5411,23))).default;if(!r.ACCESS_TOKEN)throw Error("Mapbox access token is required");return e.accessToken=r.ACCESS_TOKEN,i=e,console.log("✅ Mapbox GL initialized successfully"),e}catch(e){throw console.error("Failed to initialize Mapbox GL:",e),s=null,e}})())}function n(e,t){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=r.API[e],s=new URLSearchParams({...o,access_token:r.ACCESS_TOKEN});return"".concat(i).concat(t,"?").concat(s.toString())}},7208:(e,t,o)=>{"use strict";o.d(t,{A:()=>i});var r=o(2115);let i=r.forwardRef(function(e,t){let{title:o,titleId:i,...s}=e;return r.createElement("svg",Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",strokeWidth:1.5,stroke:"currentColor","aria-hidden":"true","data-slot":"icon",ref:t,"aria-labelledby":i},s),o?r.createElement("title",{id:i},o):null,r.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M15 10.5a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"}),r.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M19.5 10.5c0 7.142-7.5 11.25-7.5 11.25S4.5 17.642 4.5 10.5a7.5 7.5 0 1 1 15 0Z"}))})},8689:()=>{},8910:(e,t,o)=>{"use strict";o.d(t,{RT:()=>n,ff:()=>c,kk:()=>u});var r=o(3735);let{COORDINATE_PRECISION:i,CLUSTER_RADIUS:s,CLUSTER_MAX_ZOOM:a}=r.bR.DEFAULTS;function n(e){let t,o;if(e.coordinates&&Array.isArray(e.coordinates)&&e.coordinates.length>=2)t=Number(e.coordinates[0]),o=Number(e.coordinates[1]);else{if(null===e.latitude||null===e.longitude||void 0===e.latitude||void 0===e.longitude)return null;t=Number(e.longitude),o=Number(e.latitude)}return Number.isFinite(t)&&Number.isFinite(o)?[Math.round(t*Math.pow(10,i))/Math.pow(10,i),Math.round(o*Math.pow(10,i))/Math.pow(10,i)]:(console.error("Invalid coordinates for event ".concat(e.id,":"),{lng:t,lat:o}),null)}class c{async initializeLayers(){if(!this.isInitialized)try{this.map.isStyleLoaded()||(console.log("\uD83D\uDDFA️ Map style not fully loaded yet, initializing layers optimistically"),this.map.once("styledata",()=>{console.log("\uD83D\uDDFA️ Style loaded, layers should be ready")})),this.map.addSource(this.sourceId,{type:"geojson",data:{type:"FeatureCollection",features:[]},cluster:!0,clusterMaxZoom:a,clusterRadius:s,clusterProperties:{event_count:["+",1],public_count:["+",["case",["==",["get","eventType"],"public"],1,0]],private_count:["+",["case",["==",["get","eventType"],"private"],1,0]]}}),this.map.addLayer({id:this.clusteredLayerId,type:"circle",source:this.sourceId,filter:["has","point_count"],paint:{"circle-color":["step",["get","point_count"],"#51bbd6",10,"#f1c40f",30,"#e74c3c"],"circle-radius":["step",["get","point_count"],15,10,20,30,25],"circle-stroke-width":2,"circle-stroke-color":"#ffffff"}}),this.map.addLayer({id:this.clusterCountLayerId,type:"symbol",source:this.sourceId,filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["DIN Offc Pro Medium","Arial Unicode MS Bold"],"text-size":12},paint:{"text-color":"#ffffff"}}),this.map.addLayer({id:this.unclusteredLayerId,type:"circle",source:this.sourceId,filter:["!",["has","point_count"]],paint:{"circle-color":["get","color"],"circle-radius":12,"circle-stroke-width":2,"circle-stroke-color":"#ffffff","circle-opacity":.8}}),this.map.on("click",this.clusteredLayerId,this.handleClusterClick.bind(this)),this.map.on("click",this.unclusteredLayerId,this.handleEventClick.bind(this)),this.map.on("mouseenter",this.clusteredLayerId,()=>{this.map.getCanvas().style.cursor="pointer"}),this.map.on("mouseleave",this.clusteredLayerId,()=>{this.map.getCanvas().style.cursor=""}),this.map.on("mouseenter",this.unclusteredLayerId,()=>{this.map.getCanvas().style.cursor="pointer"}),this.map.on("mouseleave",this.unclusteredLayerId,()=>{this.map.getCanvas().style.cursor=""}),this.isInitialized=!0,console.log("✅ Event markers layers initialized successfully - v3.0 CACHE BREAK")}catch(e){throw console.error("❌ Error initializing event markers layers:",e),e}}updateEvents(e){if(!this.isInitialized)return void console.warn("Event markers not initialized. Call initializeLayers() first.");try{let t=function(e){let t=[];return e.forEach(e=>{var o,r,i;let s=n(e);if(!s)return void console.log("\uD83D\uDCCD Event ".concat(e.id,' ("').concat(e.title,'") has no coordinates - will appear in list but not on map'));let a={type:"Feature",geometry:{type:"Point",coordinates:s},properties:{eventId:e.id,title:e.title,eventType:e.eventType||"unknown",isPrivate:e.isPrivate||!1,color:(r=e.eventType||"",i=e.isPrivate,"journey"===r?"#dc2626":"maybe"===r?"#d97706":"notify"===r?"#7c3aed":"skipped"===r||i?"#6b7280":"public-all"===r||"public"===r?"#2563eb":"public-friends"===r||"friends"===r?"#059669":"private"===r?"#dc2626":"#6b7280")}};t.push(a),console.log("✅ Event ".concat(e.id,' ("').concat(e.title,'") added to map at coordinates:'),s),console.log("\uD83C\uDFA8 Event ".concat(e.id," color:"),null==(o=a.properties)?void 0:o.color),console.log("\uD83D\uDD0D Event ".concat(e.id," full feature:"),JSON.stringify(a,null,2))}),console.log("\uD83D\uDDFA️ Map Summary: ".concat(t.length," events with coordinates added to map out of ").concat(e.length," total events")),{type:"FeatureCollection",features:t}}(e);console.log("\uD83D\uDEA8 MAPBOX EventMarkersManager: Processing ".concat(e.length," events [DEBUG v2.0]")),console.log("\uD83D\uDDFA️ Generated GeoJSON:",JSON.stringify(t,null,2));let o=this.map.getSource(this.sourceId);if(o){console.log("\uD83C\uDFAF MAPBOX DEBUG: About to update source ".concat(this.sourceId," with ").concat(t.features.length," features")),console.log("\uD83C\uDFAF MAPBOX DEBUG: Map style loaded:",this.map.isStyleLoaded()),console.log("\uD83C\uDFAF MAPBOX DEBUG: Map loaded:",this.map.loaded());let r=e=>{console.log("\uD83D\uDD0D MAPBOX EVENT: sourcedata fired - sourceId: ".concat(e.sourceId,", isSourceLoaded: ").concat(e.isSourceLoaded,", dataType: ").concat(e.dataType)),e.sourceId===this.sourceId&&e.isSourceLoaded?(console.log("\uD83C\uDFAF MAPBOX OFFICIAL FIX: Source ".concat(this.sourceId," is fully loaded - markers should now be visible")),this.map.triggerRepaint(),this.map.off("sourcedata",r),console.log("\uD83D\uDD0D Post-load layer status:"),console.log("  - Clustered layer (".concat(this.clusteredLayerId,"):"),this.map.getLayer(this.clusteredLayerId)?"EXISTS":"MISSING"),console.log("  - Unclustered layer (".concat(this.unclusteredLayerId,"):"),this.map.getLayer(this.unclusteredLayerId)?"EXISTS":"MISSING"),console.log("  - Source (".concat(this.sourceId,"):"),this.map.getSource(this.sourceId)?"EXISTS":"MISSING")):e.sourceId===this.sourceId&&console.log("⏳ MAPBOX: Source ".concat(this.sourceId," still loading... (isSourceLoaded: ").concat(e.isSourceLoaded,")"))};this.map.on("sourcedata",r),console.log("\uD83C\uDFAF MAPBOX DEBUG: Event listener attached for source ".concat(this.sourceId)),o.setData(t),console.log("✅ Updated ".concat(e.length," events on map with ").concat(t.features.length," visible markers"))}else console.error("❌ Events source not found")}catch(e){console.error("❌ Error updating events:",e)}}handleClusterClick(e){let t=this.map.queryRenderedFeatures(e.point,{layers:[this.clusteredLayerId]});if(0===t.length)return;let o=t[0].properties.cluster_id;this.map.getSource(this.sourceId).getClusterExpansionZoom(o,(e,o)=>{e||this.map.easeTo({center:t[0].geometry.coordinates,zoom:null!=o?o:void 0})})}handleEventClick(e){let t=this.map.queryRenderedFeatures(e.point,{layers:[this.unclusteredLayerId]});if(0===t.length)return;let o=t[0],r=o.properties.eventId;window.dispatchEvent(new CustomEvent("eventMarkerClick",{detail:{eventId:r,coordinates:o.geometry}})),this.map.flyTo({center:o.geometry.coordinates,zoom:Math.max(15,this.map.getZoom()),duration:800})}addUserLocationMarker(e){this.map.getSource("user-location")&&(this.map.removeLayer("user-location-circle"),this.map.removeSource("user-location")),this.map.addSource("user-location",{type:"geojson",data:{type:"Feature",properties:{},geometry:{type:"Point",coordinates:e}}}),this.map.addLayer({id:"user-location-circle",type:"circle",source:"user-location",paint:{"circle-radius":8,"circle-color":"#16a34a","circle-stroke-width":3,"circle-stroke-color":"#ffffff"}})}destroy(){if(this.isInitialized)try{this.map.off("click",this.clusteredLayerId,this.handleClusterClick.bind(this)),this.map.off("click",this.unclusteredLayerId,this.handleEventClick.bind(this)),[this.clusterCountLayerId,this.clusteredLayerId,this.unclusteredLayerId].forEach(e=>{this.map.getLayer(e)&&this.map.removeLayer(e)}),this.map.getSource(this.sourceId)&&this.map.removeSource(this.sourceId),this.map.getSource("user-location")&&(this.map.removeLayer("user-location-circle"),this.map.removeSource("user-location")),this.isInitialized=!1,console.log("✅ Event markers cleaned up successfully")}catch(e){console.error("❌ Error cleaning up event markers:",e)}}constructor(e){this.sourceId="events-source",this.clusteredLayerId="events-clustered",this.unclusteredLayerId="events-unclustered",this.clusterCountLayerId="events-cluster-count",this.isInitialized=!1,this.map=e}}let l=0;async function u(e,t){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};try{let i=Date.now()-l;if(i<500){let e=500-i;console.log("\uD83D\uDDFA️ Throttling map creation by ".concat(e,"ms")),await new Promise(t=>setTimeout(t,e))}l=Date.now();let s=await (0,r.lV)();console.log("\uD83D\uDDFA️ Creating new Mapbox map instance");let a=new s.Map({container:e,style:o.style||r.bR.STYLES.LIGHT,center:t,zoom:o.zoom||r.bR.DEFAULTS.ZOOM,attributionControl:!1!==o.attributionControl,interactive:!1!==o.interactive,boxZoom:!0,doubleClickZoom:!0,dragPan:!0,dragRotate:!0,keyboard:!0,scrollZoom:!0,touchZoomRotate:!0});return a.on("error",e=>{console.error("Mapbox error:",e)}),console.log("\uD83D\uDDFA️ Map instance created, style loading in background..."),a.once("load",()=>{console.log("✅ Mapbox style loaded successfully (background)")}),a.once("error",e=>{console.warn("⚠️ Mapbox style load error (non-blocking):",e)}),setTimeout(()=>{a.isStyleLoaded()||console.warn("⚠️ Map style load timeout (non-blocking) - map still functional")},15e3),console.log("✅ Mapbox map returned immediately (non-blocking)"),a}catch(e){throw console.error("❌ Error initializing Mapbox map:",e),e}}}}]);