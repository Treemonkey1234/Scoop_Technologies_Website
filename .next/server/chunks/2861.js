exports.id=2861,exports.ids=[2861],exports.modules={6940:(a,b,c)=>{"use strict";function d(a){}function e(){return null}function f(a){var b;if(!a||!a?.id||(b=a.id,!1))return a;let c=e();return c?(console.log("\uD83D\uDD27 CLIENT ADMIN OVERRIDE: Applying override to user object:",c),{...a,account_type:c.accountType,subscription_status:"free"===c.accountType?"none":"active"}):a}function g(a){return!0}c.d(b,{Ke:()=>f,Oz:()=>d,X2:()=>g,cW:()=>e})},19525:(a,b,c)=>{Promise.resolve().then(c.t.bind(c,16133,23)),Promise.resolve().then(c.t.bind(c,16444,23)),Promise.resolve().then(c.t.bind(c,16042,23)),Promise.resolve().then(c.t.bind(c,49477,23)),Promise.resolve().then(c.t.bind(c,29345,23)),Promise.resolve().then(c.t.bind(c,12089,23)),Promise.resolve().then(c.t.bind(c,46577,23)),Promise.resolve().then(c.t.bind(c,31307,23)),Promise.resolve().then(c.t.bind(c,14817,23))},32677:(a,b,c)=>{Promise.resolve().then(c.t.bind(c,25227,23)),Promise.resolve().then(c.t.bind(c,86346,23)),Promise.resolve().then(c.t.bind(c,27924,23)),Promise.resolve().then(c.t.bind(c,40099,23)),Promise.resolve().then(c.t.bind(c,38243,23)),Promise.resolve().then(c.t.bind(c,28827,23)),Promise.resolve().then(c.t.bind(c,62763,23)),Promise.resolve().then(c.t.bind(c,97173,23)),Promise.resolve().then(c.bind(c,25587))},48622:(a,b,c)=>{"use strict";c.d(b,{A:()=>h});var d=c(43210),e=c(16189),f=c(53061),g=c(6940);let h=()=>{let[a,b]=(0,d.useState)({isAuthenticated:!1,user:null,authMethod:null,sessionExpiry:null,needsOnboarding:!1}),[c,h]=(0,d.useState)(!0),[i,j]=(0,d.useState)(null),k=(0,e.useRouter)(),l=(0,d.useRef)(!1),m=(0,d.useRef)(0),n=(0,d.useRef)(0),o=(0,d.useCallback)(async()=>{let a=Date.now();if(l.current||a-m.current<1e3)return void console.log("\uD83D\uDD0D AUTH DEBUG: Auth check skipped - already in progress or too recent");if(n.current>5){console.warn("\uD83D\uDD0D AUTH DEBUG: Max auth checks reached, forcing unauthenticated state"),b({isAuthenticated:!1,user:null,authMethod:null,sessionExpiry:null,needsOnboarding:!1,error:"Too many auth checks"}),h(!1);return}try{l.current=!0,m.current=a,n.current++,h(!0),console.log("\uD83D\uDD0D AUTH DEBUG: Starting authentication check..."),await new Promise(a=>setTimeout(a,100));try{let a=await fetch("/api/auth/status"),c=await a.json();if(console.log("\uD83D\uDD0D AUTH DEBUG: Server auth status:",c),c.isAuthenticated){let a=(0,g.Ke)(c.user);b({isAuthenticated:!0,user:a,authMethod:c.authMethod,sessionExpiry:c.sessionExpiry,needsOnboarding:!1}),h(!1),l.current=!1;return}}catch(a){console.log("\uD83D\uDD0D AUTH DEBUG: Could not fetch server auth status:",a)}let c=await (0,f.oI)();console.log("\uD83D\uDD0D AUTH DEBUG: Unified auth state:",c);let d={...c,user:c.user?(0,g.Ke)(c.user):c.user};b(a=>JSON.stringify(a)!==JSON.stringify(d)?(console.log("\uD83D\uDD0D AUTH DEBUG: Auth state changed, updating"),d):(console.log("\uD83D\uDD0D AUTH DEBUG: Auth state unchanged, skipping update"),a))}catch(d){let a;console.error("Auth check failed:",d);let c="session";d instanceof TypeError&&d.message.includes("fetch")?(c="network",a="Check your internet connection and try again"):d instanceof Error&&d.message.includes("config")?(c="config",a="Contact support - configuration issue detected"):d instanceof Error&&d.message.includes("validation")&&(c="validation",a="Please sign in again to refresh your session"),j({type:c,message:d instanceof Error?d.message:"Authentication check failed",recoveryAction:a}),b({isAuthenticated:!1,user:null,authMethod:null,sessionExpiry:null,needsOnboarding:!1,error:d instanceof Error?d.message:"Unknown error"})}finally{h(!1),l.current=!1}},[]);(0,d.useEffect)(()=>{let a=setTimeout(()=>{c&&(console.log("\uD83D\uDD0D AUTH DEBUG: Auth check timeout, forcing completion"),h(!1),l.current=!1)},3e3);return o(),()=>clearTimeout(a)},[]);let p=async a=>{try{if(h(!0),"auth0"===a.method)return await (0,f.wT)(a.connection||"google-oauth2",a.returnTo),{success:!0};{if(!a.phoneNumber||!a.password)return{success:!1,error:"Phone number and password are required"};let b=await (0,f.Gr)({phoneNumber:a.phoneNumber,password:a.password});if(b.success)return await o(),{success:!0};return{success:!1,error:b.error}}}catch(a){return console.error("Login error:",a),{success:!1,error:a instanceof Error?a.message:"Login failed"}}finally{h(!1)}},q=async a=>{try{h(!0);let b=await (0,f.bM)(a);if(b.success)return await o(),{success:!0};return{success:!1,error:b.error}}catch(a){return console.error("Signup error:",a),{success:!1,error:a instanceof Error?a.message:"Signup failed"}}finally{h(!1)}},r=async()=>{try{h(!0),await (0,f.ri)()}catch(a){console.error("Logout error:",a)}finally{h(!1)}},s=async()=>{await o()};return{authState:a,isLoading:c,isAuthenticated:a.isAuthenticated,user:a.user,authMethod:a.authMethod,needsOnboarding:a.needsOnboarding,error:a.error,authError:i,login:p,signup:q,logout:r,refreshAuth:s,requireAuth:()=>!!c||!!a.isAuthenticated||(console.log("\uD83D\uDD0D AUTH DEBUG: requireAuth - redirecting to signin"),k.push("/signin"),!1),requireOnboarding:()=>!!c||!a.isAuthenticated||!a.needsOnboarding||(console.log("\uD83D\uDD0D AUTH DEBUG: requireOnboarding - redirecting to onboarding"),k.push("/onboarding"),!1),clearAuthError:()=>j(null),checkAuth:o}}},48969:()=>{},53061:(a,b,c)=>{"use strict";c.d(b,{oI:()=>g,wT:()=>j,Gr:()=>h,ri:()=>k,D5:()=>l,bM:()=>i,CN:()=>m});var d=c(75136);process.env.AUTH0_DOMAIN,process.env.AUTH0_CLIENT_ID,process.env.AUTH0_CLIENT_SECRET,process.env.AUTH0_SECRET,process.env.AUTH0_BASE_URL,process.env.AUTH0_ISSUER_BASE_URL||process.env.AUTH0_DOMAIN;let e=async()=>{try{let a=await fetch("/api/user"),b=await a.json();if(!b.session)return{isValid:!1};if(b.authMethod&&"auth0"!==b.authMethod)return console.log("\uD83D\uDD0D AUTH DEBUG: Session is not Auth0, skipping Auth0 check"),{isValid:!1};let c=b.session;if(c.expiresAt&&c.expiresAt<Date.now())return{isValid:!1,error:"Session expired"};let d={id:c.sub,name:c.name||"User",username:c.email?.split("@")[0]||c.name?.split(" ")[0]||"user",email:c.email||"",picture:c.picture||"",sub:c.sub,authMethod:"auth0",accessToken:c.accessToken};try{let a=await fetch("https://coral-app-tjel2.ondigitalocean.app/api/v1/users/me",{headers:{"x-auth0-user-id":c.sub,"x-auth0-email":c.email||"","x-auth0-name":c.name||"","x-auth0-picture":c.picture||""}});if(a.ok){let b=(await a.json()).user;d.scoopUserId=b.id?.toString(),d.phone=b.phone,d.phone_verified=b.phone_verified,d.email_verified=b.email_verified,d.username=b.username||d.username,d.name=b.name||d.name,d.bio=b.bio,d.location=b.location,d.joinDate=b.joinDate,d.socialLinks=b.socialLinks,d.avatar=b.avatar,console.log("\uD83D\uDD0D AUTH USER DATA PRIORITIZATION:",{auth0Name:c.name,backendName:b.name,finalName:d.name,auth0Username:d.username,backendUsername:b.username,finalUsername:d.username})}else console.log("\uD83D\uDD0D AUTH DEBUG: Backend user profile fetch failed with status:",a.status)}catch(a){console.error("Failed to fetch backend user profile:",a)}try{await fetch("/api/admin/users?action=log-session",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({user_id:d.id,email:d.email,name:d.name,auth_method:"auth0",session_data:{sub:d.sub,accessToken:d.accessToken}})})}catch(a){console.error("Failed to log Auth0 session to admin system:",a)}return{isValid:!0,user:d,expiresAt:c.expiresAt}}catch(a){return console.error("Auth0 session check failed:",a),{isValid:!1,error:a instanceof Error?a.message:"Unknown error"}}},f=async()=>{try{let a=localStorage.getItem("authToken");if(!a)return console.log("\uD83D\uDD0D AUTH DEBUG: No auth token found in localStorage"),{isValid:!1};console.log("\uD83D\uDD0D AUTH DEBUG: Validating backend session with server");let b=await d.R2.verifySession();if(!b.valid||!b.user)return console.log("\uD83D\uDD0D AUTH DEBUG: Backend session validation failed - clearing local data"),localStorage.removeItem("authToken"),localStorage.removeItem("accessToken"),localStorage.removeItem("user"),localStorage.removeItem("scoopUserId"),sessionStorage.removeItem("authToken"),sessionStorage.removeItem("accessToken"),sessionStorage.removeItem("user"),{isValid:!1,error:"Session validation failed"};console.log("\uD83D\uDD0D AUTH DEBUG: Backend session validated successfully");let c={id:b.user.id.toString(),name:b.user.name,username:b.user.username||b.user.name?.split(" ")[0]||"user",email:b.user.email,picture:b.user.avatar_url,sub:b.user.auth0_user_id,authMethod:"backend",authToken:a,scoopUserId:b.user.id.toString(),phone:b.user.phone,phone_verified:b.user.phone_verified,email_verified:b.user.email_verified};return{isValid:!0,user:c,expiresAt:Date.now()+864e5}}catch(a){return console.error("Backend session check failed:",a),localStorage.removeItem("authToken"),localStorage.removeItem("accessToken"),localStorage.removeItem("user"),localStorage.removeItem("scoopUserId"),sessionStorage.removeItem("authToken"),sessionStorage.removeItem("accessToken"),sessionStorage.removeItem("user"),{isValid:!1,error:a instanceof Error?a.message:"Unknown error"}}},g=async()=>{try{let a=await e();if(a.isValid&&a.user){let b=!!(a.user.scoopUserId&&a.user.username&&a.user.phone),c=!!(a.user.scoopUserId&&a.user.username&&a.user.phone);return console.log("\uD83D\uDD0D AUTH0 USER ONBOARDING CHECK:",{scoopUserId:!!a.user.scoopUserId,username:!!a.user.username,phone:!!a.user.phone,hasOnboarding:b,hasCompleteBackendProfile:c,needsOnboarding:!c}),{isAuthenticated:!0,user:a.user,authMethod:"auth0",sessionExpiry:a.expiresAt||null,needsOnboarding:!c}}let b=await f();if(b.isValid&&b.user){let a=!!(b.user.username&&b.user.phone);return{isAuthenticated:!0,user:b.user,authMethod:"backend",sessionExpiry:b.expiresAt||null,needsOnboarding:!a}}return console.log("\uD83D\uDD0D AUTH DEBUG: No valid server session found, user not authenticated"),{isAuthenticated:!1,user:null,authMethod:null,sessionExpiry:null,needsOnboarding:!1}}catch(a){return console.error("Unified auth state check failed:",a),{isAuthenticated:!1,user:null,authMethod:null,sessionExpiry:null,needsOnboarding:!1,error:a instanceof Error?a.message:"Unknown error"}}},h=async a=>{try{let b=await d.R2.login(a),c={id:b.user.id.toString(),name:b.user.name,username:b.user.username,email:b.user.email,picture:b.user.avatar_url,sub:b.user.auth0_user_id,authMethod:"backend",authToken:b.token,scoopUserId:b.user.id.toString(),phone:b.user.phone,phone_verified:b.user.phone_verified,email_verified:b.user.email_verified};localStorage.setItem("user",JSON.stringify(c)),localStorage.setItem("authToken",b.token),localStorage.setItem("scoopUserId",c.scoopUserId);try{console.log("\uD83D\uDD0D BACKEND LOGIN: Attempting to sync auth state with server...");let a=await fetch("/api/auth/sync",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({user:c,authToken:b.token})});if(a.ok){let b=await a.json();console.log("\uD83D\uDD0D BACKEND LOGIN: Auth sync successful:",b),console.log("\uD83D\uDD0D BACKEND LOGIN: Sync headers:",Object.fromEntries(a.headers.entries()))}else throw console.error("\uD83D\uDD0D BACKEND LOGIN: Auth sync failed with status:",a.status),Error("Auth sync failed")}catch(e){console.error("\uD83D\uDD0D BACKEND LOGIN: Failed to sync auth state:",e),console.log("\uD83D\uDD0D BACKEND LOGIN: Using fallback cookie setting...");let a=encodeURIComponent(JSON.stringify(c)),d="path=/; max-age=86400; SameSite=Lax";document.cookie=`user=${a}; ${d}`,document.cookie=`authToken=${b.token}; ${d}`,console.log("\uD83D\uDD0D BACKEND LOGIN: Fallback cookie setting completed")}console.log("\uD83D\uDD0D BACKEND LOGIN: Successfully logged in with backend"),await new Promise(a=>setTimeout(a,100));try{await fetch("/api/admin/users?action=log-session",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({user_id:c.id,email:c.email,name:c.name,auth_method:"backend",session_data:{scoopUserId:c.scoopUserId}})}),await fetch("/api/admin/users?action=log-backend-user",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({user_id:c.id,email:c.email,name:c.name,scoop_user_id:parseInt(c.scoopUserId||"0")})})}catch(a){console.error("Failed to log session to admin system:",a)}return{success:!0,user:c}}catch(a){return console.error("\uD83D\uDD0D BACKEND LOGIN: Login failed:",a),{success:!1,error:a instanceof Error?a.message:"Login failed"}}},i=async a=>{try{let b=await d.R2.signup(a),c={id:b.user.id.toString(),name:b.user.name,username:b.user.username,email:b.user.email,picture:b.user.avatar_url,sub:b.user.auth0_user_id,authMethod:"backend",authToken:b.token,scoopUserId:b.user.id.toString(),phone:b.user.phone,phone_verified:b.user.phone_verified,email_verified:b.user.email_verified};localStorage.setItem("user",JSON.stringify(c)),localStorage.setItem("authToken",b.token),localStorage.setItem("scoopUserId",c.scoopUserId);try{await fetch("/api/auth/sync",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({user:c,authToken:b.token})}),console.log("\uD83D\uDD0D BACKEND SIGNUP: Auth sync successful")}catch(e){console.error("Failed to sync auth state:",e);let a=encodeURIComponent(JSON.stringify(c)),d="path=/; max-age=86400; SameSite=Lax";document.cookie=`user=${a}; ${d}`,document.cookie=`authToken=${b.token}; ${d}`,console.log("\uD83D\uDD0D BACKEND SIGNUP: Fallback cookie setting completed")}console.log("\uD83D\uDD0D BACKEND SIGNUP: Successfully signed up with backend");try{await fetch("/api/admin/users?action=log-session",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({user_id:c.id,email:c.email,name:c.name,auth_method:"backend",session_data:{scoopUserId:c.scoopUserId}})}),await fetch("/api/admin/users?action=log-backend-user",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({user_id:c.id,email:c.email,name:c.name,scoop_user_id:parseInt(c.scoopUserId||"0")})})}catch(a){console.error("Failed to log session to admin system:",a)}return{success:!0,user:c}}catch(a){if(console.error("\uD83D\uDD0D BACKEND SIGNUP: Signup failed:",a),a instanceof Error){if(a.message.includes("409"))return{success:!1,error:"Account already exists. This phone number or email is already registered. Please try signing in instead, or use a different phone number/email."};else if(a.message.includes("400"))return{success:!1,error:"Invalid signup data. Please check your information and try again."};else if(a.message.includes("500"))return{success:!1,error:"Server error. Please try again later."}}return{success:!1,error:a instanceof Error?a.message:"Signup failed. Please try again."}}},j=async(a,b)=>{try{console.log("\uD83D\uDD0D AUTH0 LOGIN: Starting Auth0 login process"),console.log("\uD83D\uDD0D AUTH0 LOGIN: Connection:",a),console.log("\uD83D\uDD0D AUTH0 LOGIN: Return to:",b);let c={returnTo:b||window.location.pathname,connection:a,authMethod:"auth0"},d=process.env.NEXT_PUBLIC_AUTH0_DOMAIN||"dev-av6q4m54qqcs5n00.us.auth0.com",e=process.env.NEXT_PUBLIC_AUTH0_CLIENT_ID||"5uKzDSRavv2WqTOvDnDqsh2pGvHQ759C",f=process.env.NEXT_PUBLIC_AUTH0_BASE_URL||"https://app.scoopsocials.com",g=new URL(`https://${d}/authorize`);g.searchParams.set("response_type","code"),g.searchParams.set("client_id",e),g.searchParams.set("redirect_uri",`${f}/api/auth/callback`),g.searchParams.set("scope","openid profile email"),g.searchParams.set("state",btoa(JSON.stringify(c))),g.searchParams.set("connection",a),window.location.href=g.toString()}catch(a){throw console.error("Auth0 login error:",a),a}},k=async()=>{try{sessionStorage.setItem("isLoggingOut","true");let a=process.env.NEXT_PUBLIC_AUTH0_DOMAIN||"dev-av6q4m54qqcs5n00.us.auth0.com",b=process.env.NEXT_PUBLIC_AUTH0_CLIENT_ID||"5uKzDSRavv2WqTOvDnDqsh2pGvHQ759C",c=new URL(`https://${a}/v2/logout`);c.searchParams.set("client_id",b),c.searchParams.set("returnTo",`${window.location.origin}/signin`),console.log("\uD83D\uDD0D LOGOUT: Starting comprehensive auth cleanup"),["user","authToken","accessToken","scoopUserId","scoopProfile","isNewUser","currentWalkthroughStep","walkthroughInProgress","auth0.is.authenticated","auth0.user","auth0.access_token","auth0.id_token","auth0.expires_at"].forEach(a=>{localStorage.removeItem(a),sessionStorage.removeItem(a)}),sessionStorage.clear(),["appSession","user","authToken","auth0UserData"].forEach(a=>{document.cookie=`${a}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`,document.cookie=`${a}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=${window.location.hostname};`,document.cookie=`${a}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=.${window.location.hostname};`}),document.cookie.split(";").forEach(a=>{let[b]=a.trim().split("=");b&&(b.includes("auth")||b.includes("user")||b.includes("token")||b.includes("session"))&&(document.cookie=`${b}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`,document.cookie=`${b}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=${window.location.hostname};`)});for(let a=0;a<localStorage.length;a++){let b=localStorage.key(a);b&&(b.includes("auth")||b.includes("user")||b.includes("token"))&&localStorage.removeItem(b)}console.log("\uD83D\uDD0D LOGOUT: Cleared all authentication data");try{await fetch("/api/auth/logout",{method:"POST",credentials:"include"})}catch(a){console.log("\uD83D\uDD0D LOGOUT: Server logout failed, continuing with client logout")}await new Promise(a=>setTimeout(a,100)),window.location.href="/signin"}catch(a){console.error("Logout error:",a),window.location.href="/signin"}},l=async()=>{try{console.log("\uD83D\uDD0D MIGRATION: Starting migration to backend...");let a=localStorage.getItem("user"),b=localStorage.getItem("authToken");if(!a||!b)return console.log("\uD83D\uDD0D MIGRATION: No local data to migrate"),{success:!0,migrated:!1};let c=await d.zl.migrateLocalDataToBackend();if(c.success&&c.migrated)return console.log("\uD83D\uDD0D MIGRATION: Successfully migrated local data to backend"),{success:!0,migrated:!0};if(c.success)return console.log("\uD83D\uDD0D MIGRATION: User already exists in backend, synced data"),{success:!0,migrated:!1};return console.log("\uD83D\uDD0D MIGRATION: Migration failed, keeping local data"),{success:!1,migrated:!1,error:"Migration failed"}}catch(a){return console.error("\uD83D\uDD0D MIGRATION: Error during migration:",a),{success:!1,migrated:!1,error:a instanceof Error?a.message:"Unknown error"}}},m=async a=>{try{console.log("\uD83D\uDD0D SMS SIGNUP: Creating account with SMS verification");let b=await fetch("/api/auth/signup",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}),c=await b.json();if(!b.ok)return console.error("\uD83D\uDD0D SMS SIGNUP: Signup failed:",c.message),{success:!1,error:c.message||"Signup failed"};{console.log("\uD83D\uDD0D SMS SIGNUP: Account created successfully");let a={id:c.user.id.toString(),name:c.user.name,username:c.user.username,email:c.user.email,picture:c.user.avatar_url,sub:c.user.auth0_user_id,authMethod:"sms",authToken:c.token,scoopUserId:c.user.id.toString(),phone:c.user.phone,phone_verified:c.user.phone_verified,email_verified:c.user.email_verified};return{success:!0,user:a,needsVerification:c.needsVerification}}}catch(a){return console.error("\uD83D\uDD0D SMS SIGNUP: Error:",a),{success:!1,error:"An unexpected error occurred"}}}},58014:(a,b,c)=>{"use strict";c.r(b),c.d(b,{default:()=>h,metadata:()=>g});var d=c(37413),e=c(61421),f=c.n(e);c(61120),c(82704);let g={title:"ScoopSocials - Trust-Based Social Network",description:"Connect with verified, trustworthy people in your community. Share reviews, discover events, and build meaningful relationships.",keywords:"social network, trust, reviews, community, events, verified users",authors:[{name:"ScoopSocials Team"}],colorScheme:"light",themeColor:"#06b6d4",viewport:"width=device-width, initial-scale=1, maximum-scale=1",openGraph:{title:"ScoopSocials - Trust-Based Social Network",description:"Connect with verified, trustworthy people in your community.",type:"website",locale:"en_US"},twitter:{card:"summary_large_image",title:"ScoopSocials - Trust-Based Social Network",description:"Connect with verified, trustworthy people in your community."},icons:{icon:"/favicon.ico",apple:"/apple-touch-icon.png"},manifest:"/manifest.json"};function h({children:a}){return(0,d.jsxs)("html",{lang:"en",className:"h-full",children:[(0,d.jsxs)("head",{children:[(0,d.jsx)("link",{rel:"preconnect",href:"https://fonts.googleapis.com"}),(0,d.jsx)("link",{rel:"preconnect",href:"https://fonts.gstatic.com",crossOrigin:""}),(0,d.jsx)("meta",{name:"apple-mobile-web-app-capable",content:"yes"}),(0,d.jsx)("meta",{name:"apple-mobile-web-app-status-bar-style",content:"default"}),(0,d.jsx)("meta",{name:"format-detection",content:"telephone=no"}),(0,d.jsx)("meta",{name:"mobile-web-app-capable",content:"yes"})]}),(0,d.jsx)("body",{className:`${f().className} h-full overflow-x-hidden`,children:(0,d.jsx)("div",{id:"root",className:"min-h-full",children:a})})]})}},75136:(a,b,c)=>{"use strict";c.d(b,{R2:()=>g,friendsAPI:()=>h,zl:()=>i});let d=async a=>(console.error("\uD83D\uDD0D AUTH ERROR:",a),!1);async function e(a,b={}){let c=`https://coral-app-tjel2.ondigitalocean.app/api/v1${a}`,f={"Content-Type":"application/json"},g=function(){let a=[localStorage.getItem("authToken"),localStorage.getItem("accessToken"),sessionStorage.getItem("authToken"),sessionStorage.getItem("accessToken")].find(a=>a&&a.length>0);if(a)return console.log("\uD83D\uDD0D API: Found auth token from storage"),a;for(let a of document.cookie.split(";")){let[b,c]=a.trim().split("=");if("authToken"===b&&c)return console.log("\uD83D\uDD0D API: Found auth token from cookies"),decodeURIComponent(c)}return console.log("\uD83D\uDD0D API: No auth token found"),null}();g?(f.Authorization=`Bearer ${g}`,console.log("\uD83D\uDD0D API: Adding Authorization header for",a)):console.log("\uD83D\uDD0D API: No auth token available for",a);let h={...b,headers:{...f,...b.headers}};console.log("\uD83D\uDD0D API Request:",{url:c,method:h.method||"GET",hasAuthHeader:!!f.Authorization,endpoint:a});try{let b=await fetch(c,h);if(console.log("\uD83D\uDD0D API Response:",{url:c,status:b.status,statusText:b.statusText,endpoint:a}),!b.ok){let a=Error(`API request failed: ${b.status} ${b.statusText}`);throw a.status=b.status,(401===b.status||403===b.status)&&d(a),a}let e=await b.json();return console.log("\uD83D\uDD0D API Success:",{url:c,data:e?"received":"no data",endpoint:a}),e}catch(b){throw console.error("\uD83D\uDD0D API request error:",{url:c,error:b instanceof Error?b.message:"Unknown error",endpoint:a}),b}}let f={async getCurrentUser(){try{return(await e("/users/me")).user}catch(a){return console.error("Error fetching current user:",a),null}},createUser:async a=>(await e("/users",{method:"POST",body:JSON.stringify(a)})).user,updateUser:async(a,b)=>(await e(`/users/${a}`,{method:"PUT",body:JSON.stringify(b)})).user,getUserById:async a=>(await e(`/users/${a}`)).user,searchUsers:async(a,b=20)=>(await e(`/users/search?q=${encodeURIComponent(a)}&limit=${b}`)).users},g={login:async a=>await e("/auth/login",{method:"POST",body:JSON.stringify(a)}),signup:async a=>await e("/auth/signup",{method:"POST",body:JSON.stringify(a)}),async verifySession(){try{return{user:(await e("/users/me")).user,valid:!0}}catch(a){return{user:null,valid:!1}}}},h={getFriends:async()=>(await e("/friends")).friends,async addFriend(a){await e("/friends",{method:"POST",body:JSON.stringify({friend_id:a})})},async removeFriend(a){await e(`/friends/${a}`,{method:"DELETE"})},getFriendRequests:async()=>(await e("/friends/requests")).requests,async acceptFriendRequest(a){await e(`/friends/requests/${a}/accept`,{method:"POST"})},async rejectFriendRequest(a){await e(`/friends/requests/${a}/reject`,{method:"POST"})}},i={async syncLocalAuthWithBackend(){try{let a=localStorage.getItem("user"),b=localStorage.getItem("authToken");if(!a||!b)return{success:!1};let c=await g.verifySession();if(c.valid&&c.user)return localStorage.setItem("user",JSON.stringify(c.user)),{success:!0,user:c.user};return{success:!1}}catch(a){return console.error("Error syncing local auth with backend:",a),{success:!1}}},async migrateLocalDataToBackend(){try{let a=localStorage.getItem("user"),b=localStorage.getItem("authToken");if(!a||!b)return{success:!0,migrated:!1};let c=JSON.parse(a);if((await g.verifySession()).valid)return{success:!0,migrated:!1};let d=await f.createUser({auth0UserId:c.sub||`local_${Date.now()}`,email:c.email,name:c.name,avatar:c.picture});return localStorage.setItem("user",JSON.stringify(d)),{success:!0,migrated:!0}}catch(a){return console.error("Error migrating local data to backend:",a),{success:!1,migrated:!1}}}}},82704:()=>{},83817:()=>{}};