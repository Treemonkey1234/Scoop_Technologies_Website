exports.id=2743,exports.ids=[2743],exports.modules={2529:()=>{},8024:(a,b,c)=>{"use strict";c.d(b,{RT:()=>h,ff:()=>i,kk:()=>k});var d=c(77379);let{COORDINATE_PRECISION:e,CLUSTER_RADIUS:f,CLUSTER_MAX_ZOOM:g}=d.bR.DEFAULTS;function h(a){let b,c;if(a.coordinates&&Array.isArray(a.coordinates)&&a.coordinates.length>=2)b=Number(a.coordinates[0]),c=Number(a.coordinates[1]);else{if(null===a.latitude||null===a.longitude||void 0===a.latitude||void 0===a.longitude)return null;b=Number(a.longitude),c=Number(a.latitude)}return Number.isFinite(b)&&Number.isFinite(c)?[Math.round(b*Math.pow(10,e))/Math.pow(10,e),Math.round(c*Math.pow(10,e))/Math.pow(10,e)]:(console.error(`Invalid coordinates for event ${a.id}:`,{lng:b,lat:c}),null)}class i{constructor(a){this.sourceId="events-source",this.clusteredLayerId="events-clustered",this.unclusteredLayerId="events-unclustered",this.clusterCountLayerId="events-cluster-count",this.isInitialized=!1,this.map=a}async initializeLayers(){if(!this.isInitialized)try{this.map.isStyleLoaded()||(console.log("\uD83D\uDDFAÔ∏è Map style not fully loaded yet, initializing layers optimistically"),this.map.once("styledata",()=>{console.log("\uD83D\uDDFAÔ∏è Style loaded, layers should be ready")})),this.map.addSource(this.sourceId,{type:"geojson",data:{type:"FeatureCollection",features:[]},cluster:!0,clusterMaxZoom:g,clusterRadius:f,clusterProperties:{event_count:["+",1],public_count:["+",["case",["==",["get","eventType"],"public"],1,0]],private_count:["+",["case",["==",["get","eventType"],"private"],1,0]]}}),this.map.addLayer({id:this.clusteredLayerId,type:"circle",source:this.sourceId,filter:["has","point_count"],paint:{"circle-color":["step",["get","point_count"],"#51bbd6",10,"#f1c40f",30,"#e74c3c"],"circle-radius":["step",["get","point_count"],15,10,20,30,25],"circle-stroke-width":2,"circle-stroke-color":"#ffffff"}}),this.map.addLayer({id:this.clusterCountLayerId,type:"symbol",source:this.sourceId,filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["DIN Offc Pro Medium","Arial Unicode MS Bold"],"text-size":12},paint:{"text-color":"#ffffff"}}),this.map.addLayer({id:this.unclusteredLayerId,type:"circle",source:this.sourceId,filter:["!",["has","point_count"]],paint:{"circle-color":["get","color"],"circle-radius":12,"circle-stroke-width":2,"circle-stroke-color":"#ffffff","circle-opacity":.8}}),this.map.on("click",this.clusteredLayerId,this.handleClusterClick.bind(this)),this.map.on("click",this.unclusteredLayerId,this.handleEventClick.bind(this)),this.map.on("mouseenter",this.clusteredLayerId,()=>{this.map.getCanvas().style.cursor="pointer"}),this.map.on("mouseleave",this.clusteredLayerId,()=>{this.map.getCanvas().style.cursor=""}),this.map.on("mouseenter",this.unclusteredLayerId,()=>{this.map.getCanvas().style.cursor="pointer"}),this.map.on("mouseleave",this.unclusteredLayerId,()=>{this.map.getCanvas().style.cursor=""}),this.isInitialized=!0,console.log("‚úÖ Event markers layers initialized successfully - v3.0 CACHE BREAK")}catch(a){throw console.error("‚ùå Error initializing event markers layers:",a),a}}updateEvents(a){if(!this.isInitialized)return void console.warn("Event markers not initialized. Call initializeLayers() first.");try{let b=function(a){let b=[];return a.forEach(a=>{var c,d;let e=h(a);if(!e)return void console.log(`üìç Event ${a.id} ("${a.title}") has no coordinates - will appear in list but not on map`);let f={type:"Feature",geometry:{type:"Point",coordinates:e},properties:{eventId:a.id,title:a.title,eventType:a.eventType||"unknown",isPrivate:a.isPrivate||!1,color:(c=a.eventType||"",d=a.isPrivate,"journey"===c?"#dc2626":"maybe"===c?"#d97706":"notify"===c?"#7c3aed":"skipped"===c||d?"#6b7280":"public-all"===c||"public"===c?"#2563eb":"public-friends"===c||"friends"===c?"#059669":"private"===c?"#dc2626":"#6b7280")}};b.push(f),console.log(`‚úÖ Event ${a.id} ("${a.title}") added to map at coordinates:`,e),console.log(`üé® Event ${a.id} color:`,f.properties?.color),console.log(`üîç Event ${a.id} full feature:`,JSON.stringify(f,null,2))}),console.log(`üó∫Ô∏è Map Summary: ${b.length} events with coordinates added to map out of ${a.length} total events`),{type:"FeatureCollection",features:b}}(a);console.log(`üö® MAPBOX EventMarkersManager: Processing ${a.length} events [DEBUG v2.0]`),console.log(`üó∫Ô∏è Generated GeoJSON:`,JSON.stringify(b,null,2));let c=this.map.getSource(this.sourceId);if(c){console.log(`üéØ MAPBOX DEBUG: About to update source ${this.sourceId} with ${b.features.length} features`),console.log(`üéØ MAPBOX DEBUG: Map style loaded:`,this.map.isStyleLoaded()),console.log(`üéØ MAPBOX DEBUG: Map loaded:`,this.map.loaded());let d=a=>{console.log(`üîç MAPBOX EVENT: sourcedata fired - sourceId: ${a.sourceId}, isSourceLoaded: ${a.isSourceLoaded}, dataType: ${a.dataType}`),a.sourceId===this.sourceId&&a.isSourceLoaded?(console.log(`üéØ MAPBOX OFFICIAL FIX: Source ${this.sourceId} is fully loaded - markers should now be visible`),this.map.triggerRepaint(),this.map.off("sourcedata",d),console.log(`üîç Post-load layer status:`),console.log(`  - Clustered layer (${this.clusteredLayerId}):`,this.map.getLayer(this.clusteredLayerId)?"EXISTS":"MISSING"),console.log(`  - Unclustered layer (${this.unclusteredLayerId}):`,this.map.getLayer(this.unclusteredLayerId)?"EXISTS":"MISSING"),console.log(`  - Source (${this.sourceId}):`,this.map.getSource(this.sourceId)?"EXISTS":"MISSING")):a.sourceId===this.sourceId&&console.log(`‚è≥ MAPBOX: Source ${this.sourceId} still loading... (isSourceLoaded: ${a.isSourceLoaded})`)};this.map.on("sourcedata",d),console.log(`üéØ MAPBOX DEBUG: Event listener attached for source ${this.sourceId}`),c.setData(b),console.log(`‚úÖ Updated ${a.length} events on map with ${b.features.length} visible markers`)}else console.error("‚ùå Events source not found")}catch(a){console.error("‚ùå Error updating events:",a)}}handleClusterClick(a){let b=this.map.queryRenderedFeatures(a.point,{layers:[this.clusteredLayerId]});if(0===b.length)return;let c=b[0].properties.cluster_id;this.map.getSource(this.sourceId).getClusterExpansionZoom(c,(a,c)=>{a||this.map.easeTo({center:b[0].geometry.coordinates,zoom:c??void 0})})}handleEventClick(a){let b=this.map.queryRenderedFeatures(a.point,{layers:[this.unclusteredLayerId]});if(0===b.length)return;let c=b[0],d=c.properties.eventId;window.dispatchEvent(new CustomEvent("eventMarkerClick",{detail:{eventId:d,coordinates:c.geometry}})),this.map.flyTo({center:c.geometry.coordinates,zoom:Math.max(15,this.map.getZoom()),duration:800})}addUserLocationMarker(a){this.map.getSource("user-location")&&(this.map.removeLayer("user-location-circle"),this.map.removeSource("user-location")),this.map.addSource("user-location",{type:"geojson",data:{type:"Feature",properties:{},geometry:{type:"Point",coordinates:a}}}),this.map.addLayer({id:"user-location-circle",type:"circle",source:"user-location",paint:{"circle-radius":8,"circle-color":"#16a34a","circle-stroke-width":3,"circle-stroke-color":"#ffffff"}})}destroy(){if(this.isInitialized)try{this.map.off("click",this.clusteredLayerId,this.handleClusterClick.bind(this)),this.map.off("click",this.unclusteredLayerId,this.handleEventClick.bind(this)),[this.clusterCountLayerId,this.clusteredLayerId,this.unclusteredLayerId].forEach(a=>{this.map.getLayer(a)&&this.map.removeLayer(a)}),this.map.getSource(this.sourceId)&&this.map.removeSource(this.sourceId),this.map.getSource("user-location")&&(this.map.removeLayer("user-location-circle"),this.map.removeSource("user-location")),this.isInitialized=!1,console.log("‚úÖ Event markers cleaned up successfully")}catch(a){console.error("‚ùå Error cleaning up event markers:",a)}}}let j=0;async function k(a,b,c={}){try{let e=Date.now()-j;if(e<500){let a=500-e;console.log(`üó∫Ô∏è Throttling map creation by ${a}ms`),await new Promise(b=>setTimeout(b,a))}j=Date.now();let f=await (0,d.lV)();console.log("\uD83D\uDDFAÔ∏è Creating new Mapbox map instance");let g=new f.Map({container:a,style:c.style||d.bR.STYLES.LIGHT,center:b,zoom:c.zoom||d.bR.DEFAULTS.ZOOM,attributionControl:!1!==c.attributionControl,interactive:!1!==c.interactive,boxZoom:!0,doubleClickZoom:!0,dragPan:!0,dragRotate:!0,keyboard:!0,scrollZoom:!0,touchZoomRotate:!0});return g.on("error",a=>{console.error("Mapbox error:",a)}),console.log("\uD83D\uDDFAÔ∏è Map instance created, style loading in background..."),g.once("load",()=>{console.log("‚úÖ Mapbox style loaded successfully (background)")}),g.once("error",a=>{console.warn("‚ö†Ô∏è Mapbox style load error (non-blocking):",a)}),setTimeout(()=>{g.isStyleLoaded()||console.warn("‚ö†Ô∏è Map style load timeout (non-blocking) - map still functional")},15e3),console.log("‚úÖ Mapbox map returned immediately (non-blocking)"),g}catch(a){throw console.error("‚ùå Error initializing Mapbox map:",a),a}}},36942:(a,b,c)=>{"use strict";c.d(b,{A:()=>e});var d=c(43210);let e=d.forwardRef(function({title:a,titleId:b,...c},e){return d.createElement("svg",Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",strokeWidth:1.5,stroke:"currentColor","aria-hidden":"true","data-slot":"icon",ref:e,"aria-labelledby":b},c),a?d.createElement("title",{id:b},a):null,d.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M15 10.5a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"}),d.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M19.5 10.5c0 7.142-7.5 11.25-7.5 11.25S4.5 17.642 4.5 10.5a7.5 7.5 0 1 1 15 0Z"}))})},77379:(a,b,c)=>{"use strict";c.d(b,{Pz:()=>h,bR:()=>d,lV:()=>g});let d={ACCESS_TOKEN:process.env.NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN||"pk.eyJ1IjoidHJlZW1vbmtleTQ1NiIsImEiOiJjbWMwc3FodnIwNjJ6MmxwdWtpamFkbjVyIn0._yMY5crJh7ujrwoxkm3EVw",STYLES:{LIGHT:"mapbox://styles/mapbox/light-v11",STREETS:"mapbox://styles/mapbox/streets-v12",SATELLITE:"mapbox://styles/mapbox/satellite-v9"},DEFAULTS:{ZOOM:13,COORDINATE_PRECISION:6,CLUSTER_RADIUS:50,CLUSTER_MAX_ZOOM:14},API:{GEOCODING:"https://api.mapbox.com/geocoding/v5/mapbox.places",DIRECTIONS:"https://api.mapbox.com/directions/v5/mapbox",ISOCHRONE:"https://api.mapbox.com/isochrone/v1/mapbox",MATRIX:"https://api.mapbox.com/directions-matrix/v1/mapbox"}},e=null,f=null;async function g(){return e||f||(f=(async()=>{try{console.log("\uD83D\uDDFAÔ∏è Initializing Mapbox GL (singleton)");let a=(await c.e(8745).then(c.t.bind(c,18745,23))).default;if(!d.ACCESS_TOKEN)throw Error("Mapbox access token is required");return a.accessToken=d.ACCESS_TOKEN,e=a,console.log("‚úÖ Mapbox GL initialized successfully"),a}catch(a){throw console.error("Failed to initialize Mapbox GL:",a),f=null,a}})())}function h(a,b,c={}){let e=d.API[a],f=new URLSearchParams({...c,access_token:d.ACCESS_TOKEN});return`${e}${b}?${f.toString()}`}}};