(()=>{var a={};a.id=1622,a.ids=[1622],a.modules={261:a=>{"use strict";a.exports=require("next/dist/shared/lib/router/utils/app-paths")},3295:a=>{"use strict";a.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:a=>{"use strict";a.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29294:a=>{"use strict";a.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:a=>{"use strict";a.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:a=>{"use strict";a.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},79004:(a,b,c)=>{"use strict";c.r(b),c.d(b,{handler:()=>B,patchFetch:()=>A,routeModule:()=>w,serverHooks:()=>z,workAsyncStorage:()=>x,workUnitAsyncStorage:()=>y});var d={};c.r(d),c.d(d,{DELETE:()=>v});var e=c(96559),f=c(48088),g=c(37719),h=c(26191),i=c(81289),j=c(261),k=c(92603),l=c(39893),m=c(14823),n=c(47220),o=c(66946),p=c(47912),q=c(99786),r=c(46143),s=c(86439),t=c(43365),u=c(32190);async function v(a){try{console.log("\uD83D\uDD0D NUCLEAR RESET: Starting complete database reset");let a="https://coral-app-tjel2.ondigitalocean.app",b=`${a}/api/admin/nuclear-reset`;console.log("\uD83D\uDD0D NUCLEAR RESET: Backend URL:",b);let c=await fetch(b,{method:"DELETE",headers:{"Content-Type":"application/json",Accept:"application/json","User-Agent":"ScoopSocials-Frontend/1.0"}});if(console.log("\uD83D\uDD0D NUCLEAR RESET: Backend response status:",c.status),console.log("\uD83D\uDD0D NUCLEAR RESET: Backend response ok:",c.ok),c.ok){let a=await c.json();return console.log("\uD83D\uDD0D NUCLEAR RESET: Backend response:",a),u.NextResponse.json({success:!0,message:"Nuclear reset completed successfully",deletedCount:a.deletedCount||0,resetInfo:a.resetInfo||"All users deleted and ID sequence reset",timestamp:new Date().toISOString()})}{let b=await c.text();console.error("\uD83D\uDD0D NUCLEAR RESET: Backend error:",b),console.log("\uD83D\uDD0D NUCLEAR RESET: Trying fallback delete all endpoint");let d=`${a}/api/admin/users/ALL/confirm-delete-all`,e=await fetch(d,{method:"DELETE",headers:{"Content-Type":"application/json",Accept:"application/json","User-Agent":"ScoopSocials-Frontend/1.0"}});if(e.ok){let a=await e.json();return console.log("\uD83D\uDD0D NUCLEAR RESET: Fallback delete all successful:",a),u.NextResponse.json({success:!0,message:"All users deleted (fallback method - ID sequence not reset)",deletedCount:a.deletedCount||0,resetInfo:"Users deleted but ID sequence may not be reset",fallback:!0,timestamp:new Date().toISOString()})}console.log("\uD83D\uDD0D NUCLEAR RESET: Both bulk endpoints failed, trying individual deletion");try{let b=`${a}/api/admin/users`,c=await fetch(b,{method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json","User-Agent":"ScoopSocials-Frontend/1.0"}});if(c.ok){let b=(await c.json()).users||[];console.log(`🔍 NUCLEAR RESET: Found ${b.length} users to delete individually`);let d=b.map(async b=>{try{let c=`${a}/api/admin/users/${b.id}`;if((await fetch(c,{method:"DELETE",headers:{"Content-Type":"application/json",Accept:"application/json","User-Agent":"ScoopSocials-Frontend/1.0"}})).ok)return console.log(`🔍 NUCLEAR RESET: Deleted user ${b.id}`),!0;return console.error(`🔍 NUCLEAR RESET: Failed to delete user ${b.id}`),!1}catch(a){return console.error(`🔍 NUCLEAR RESET: Error deleting user ${b.id}:`,a),!1}}),e=(await Promise.all(d)).filter(a=>!0===a).length;return u.NextResponse.json({success:!0,message:`Successfully deleted ${e} users individually`,deletedCount:e,resetInfo:"Users deleted individually (ID sequence not reset)",fallback:"individual",timestamp:new Date().toISOString()})}throw Error("Could not fetch users list for individual deletion")}catch(a){return console.error("\uD83D\uDD0D NUCLEAR RESET: Individual deletion also failed:",a),u.NextResponse.json({success:!1,error:"Nuclear reset failed - all methods exhausted",details:`Original error: ${b}. Individual deletion error: ${a instanceof Error?a.message:"Unknown error"}`},{status:500})}}}catch(a){return console.error("\uD83D\uDD0D NUCLEAR RESET: Error during nuclear reset:",a),u.NextResponse.json({success:!1,error:"Nuclear reset failed - internal server error",details:a instanceof Error?a.message:"Unknown error"},{status:500})}}let w=new e.AppRouteRouteModule({definition:{kind:f.RouteKind.APP_ROUTE,page:"/api/admin/nuclear-reset/route",pathname:"/api/admin/nuclear-reset",filename:"route",bundlePath:"app/api/admin/nuclear-reset/route"},distDir:".next",projectDir:"",resolvedPagePath:"C:\\Users\\hemin\\Local Files\\Desktop\\Scoop\\Static HTML Scoop\\app\\api\\admin\\nuclear-reset\\route.ts",nextConfigOutput:"",userland:d}),{workAsyncStorage:x,workUnitAsyncStorage:y,serverHooks:z}=w;function A(){return(0,g.patchFetch)({workAsyncStorage:x,workUnitAsyncStorage:y})}async function B(a,b,c){var d;let e="/api/admin/nuclear-reset/route";"/index"===e&&(e="/");let g=await w.prepare(a,b,{srcPage:e,multiZoneDraftMode:"false"});if(!g)return b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve()),null;let{buildId:u,params:v,nextConfig:x,isDraftMode:y,prerenderManifest:z,routerServerContext:A,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,resolvedPathname:D}=g,E=(0,j.normalizeAppPath)(e),F=!!(z.dynamicRoutes[E]||z.routes[D]);if(F&&!y){let a=!!z.routes[D],b=z.dynamicRoutes[E];if(b&&!1===b.fallback&&!a)throw new s.NoFallbackError}let G=null;!F||w.isDev||y||(G="/index"===(G=D)?"/":G);let H=!0===w.isDev||!F,I=F&&!H,J=a.method||"GET",K=(0,i.getTracer)(),L=K.getActiveScopeSpan(),M={params:v,prerenderManifest:z,renderOpts:{experimental:{dynamicIO:!!x.experimental.dynamicIO,authInterrupts:!!x.experimental.authInterrupts},supportsDynamicResponse:H,incrementalCache:(0,h.getRequestMeta)(a,"incrementalCache"),cacheLifeProfiles:null==(d=x.experimental)?void 0:d.cacheLife,isRevalidate:I,waitUntil:c.waitUntil,onClose:a=>{b.on("close",a)},onAfterTaskError:void 0,onInstrumentationRequestError:(b,c,d)=>w.onRequestError(a,b,d,A)},sharedContext:{buildId:u}},N=new k.NodeNextRequest(a),O=new k.NodeNextResponse(b),P=l.NextRequestAdapter.fromNodeNextRequest(N,(0,l.signalFromNodeResponse)(b));try{let d=async c=>w.handle(P,M).finally(()=>{if(!c)return;c.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let d=K.getRootSpanAttributes();if(!d)return;if(d.get("next.span_type")!==m.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${d.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let e=d.get("next.route");if(e){let a=`${J} ${e}`;c.setAttributes({"next.route":e,"http.route":e,"next.span_name":a}),c.updateName(a)}else c.updateName(`${J} ${a.url}`)}),g=async g=>{var i,j;let k=async({previousCacheEntry:f})=>{try{if(!(0,h.getRequestMeta)(a,"minimalMode")&&B&&C&&!f)return b.statusCode=404,b.setHeader("x-nextjs-cache","REVALIDATED"),b.end("This page could not be found"),null;let e=await d(g);a.fetchMetrics=M.renderOpts.fetchMetrics;let i=M.renderOpts.pendingWaitUntil;i&&c.waitUntil&&(c.waitUntil(i),i=void 0);let j=M.renderOpts.collectedTags;if(!F)return await (0,o.I)(N,O,e,M.renderOpts.pendingWaitUntil),null;{let a=await e.blob(),b=(0,p.toNodeOutgoingHttpHeaders)(e.headers);j&&(b[r.NEXT_CACHE_TAGS_HEADER]=j),!b["content-type"]&&a.type&&(b["content-type"]=a.type);let c=void 0!==M.renderOpts.collectedRevalidate&&!(M.renderOpts.collectedRevalidate>=r.INFINITE_CACHE)&&M.renderOpts.collectedRevalidate,d=void 0===M.renderOpts.collectedExpire||M.renderOpts.collectedExpire>=r.INFINITE_CACHE?void 0:M.renderOpts.collectedExpire;return{value:{kind:t.CachedRouteKind.APP_ROUTE,status:e.status,body:Buffer.from(await a.arrayBuffer()),headers:b},cacheControl:{revalidate:c,expire:d}}}}catch(b){throw(null==f?void 0:f.isStale)&&await w.onRequestError(a,b,{routerKind:"App Router",routePath:e,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})},A),b}},l=await w.handleResponse({req:a,nextConfig:x,cacheKey:G,routeKind:f.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:z,isRoutePPREnabled:!1,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,responseGenerator:k,waitUntil:c.waitUntil});if(!F)return null;if((null==l||null==(i=l.value)?void 0:i.kind)!==t.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==l||null==(j=l.value)?void 0:j.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,h.getRequestMeta)(a,"minimalMode")||b.setHeader("x-nextjs-cache",B?"REVALIDATED":l.isMiss?"MISS":l.isStale?"STALE":"HIT"),y&&b.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let m=(0,p.fromNodeOutgoingHttpHeaders)(l.value.headers);return(0,h.getRequestMeta)(a,"minimalMode")&&F||m.delete(r.NEXT_CACHE_TAGS_HEADER),!l.cacheControl||b.getHeader("Cache-Control")||m.get("Cache-Control")||m.set("Cache-Control",(0,q.getCacheControlHeader)(l.cacheControl)),await (0,o.I)(N,O,new Response(l.value.body,{headers:m,status:l.value.status||200})),null};L?await g(L):await K.withPropagatedContext(a.headers,()=>K.trace(m.BaseServerSpan.handleRequest,{spanName:`${J} ${a.url}`,kind:i.SpanKind.SERVER,attributes:{"http.method":J,"http.target":a.url}},g))}catch(b){if(L||b instanceof s.NoFallbackError||await w.onRequestError(a,b,{routerKind:"App Router",routePath:E,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})}),F)throw b;return await (0,o.I)(N,O,new Response(null,{status:500})),null}}},86439:a=>{"use strict";a.exports=require("next/dist/shared/lib/no-fallback-error.external")},96487:()=>{}};var b=require("../../../../webpack-runtime.js");b.C(a);var c=b.X(0,[4985,6055],()=>b(b.s=79004));module.exports=c})();