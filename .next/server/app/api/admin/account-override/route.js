(()=>{var a={};a.id=7844,a.ids=[7844],a.modules={261:a=>{"use strict";a.exports=require("next/dist/shared/lib/router/utils/app-paths")},3295:a=>{"use strict";a.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},7015:(a,b,c)=>{"use strict";c.r(b),c.d(b,{handler:()=>E,patchFetch:()=>D,routeModule:()=>z,serverHooks:()=>C,workAsyncStorage:()=>A,workUnitAsyncStorage:()=>B});var d={};c.r(d),c.d(d,{DELETE:()=>y,GET:()=>x,POST:()=>w});var e=c(96559),f=c(48088),g=c(37719),h=c(26191),i=c(81289),j=c(261),k=c(92603),l=c(39893),m=c(14823),n=c(47220),o=c(66946),p=c(47912),q=c(99786),r=c(46143),s=c(86439),t=c(43365),u=c(32190),v=c(61514);async function w(a){try{console.log("\uD83D\uDD27 ADMIN OVERRIDE: Processing account type change");let{userId:b,targetAccountType:c}=await a.json(),d=a.headers.get("x-user-id");if(!d||!b||!c)return u.NextResponse.json({success:!1,error:"Missing required fields: userId, targetAccountType"},{status:400});if(!["free","professional","venue"].includes(c))return u.NextResponse.json({success:!1,error:"Invalid account type. Must be free, professional, or venue"},{status:400});console.log("\uD83D\uDD27 ADMIN OVERRIDE: User",d,"changing account",b,"to",c);let e=parseInt(b);(0,v.Pr)(e,c);let f={id:e,account_type:c,subscription_status:"free"===c?"none":"active",stripe_customer_id:"free"===c?null:`cus_admin_override_${b}`,updated_at:new Date},g=null;return"free"!==c&&(g={id:Date.now(),user_id:parseInt(b),stripe_subscription_id:`sub_admin_override_${b}_${Date.now()}`,stripe_customer_id:`cus_admin_override_${b}`,plan_type:c,status:"active",current_period_start:new Date,current_period_end:new Date(Date.now()+2592e6),cancel_at_period_end:!1,price_id:"professional"===c?"price_professional_admin":"price_venue_admin",amount_cents:0,currency:"usd",created_at:new Date,updated_at:new Date}),console.log("✅ ADMIN OVERRIDE: Successfully changed account type"),console.log("\uD83D\uDCCB ADMIN OVERRIDE: User details:",f),g&&console.log("\uD83D\uDCCB ADMIN OVERRIDE: Subscription details:",g),u.NextResponse.json({success:!0,message:`Successfully changed account type to ${c}`,user:f,subscription:g,adminAction:{performedBy:d?parseInt(d):0,targetUser:parseInt(b),action:"account_type_override",fromType:"unknown",toType:c,timestamp:new Date,reason:"Admin testing override"}},{status:200})}catch(a){return console.error("❌ ADMIN OVERRIDE API: Error changing account type:",a),u.NextResponse.json({success:!1,error:"Failed to change account type"},{status:500})}}async function x(a){try{console.log("\uD83D\uDD0D ADMIN OVERRIDE: Getting account status");let{searchParams:b}=new URL(a.url),c=b.get("userId"),d=a.headers.get("x-user-id");if(!c)return u.NextResponse.json({success:!1,error:"User ID is required"},{status:400});console.log("\uD83D\uDD0D ADMIN OVERRIDE: Getting status for user:",c);let e=parseInt(c),f=(0,v.PR)(e),g=f?.account_type||"free",h=f?.subscription_status||"none";console.log("\uD83D\uDD0D ADMIN OVERRIDE: Current override for user",e,":",f||"none");let i={user:{id:e,account_type:g,subscription_status:h,stripe_customer_id:"free"===g?null:`cus_admin_override_${c}`,created_at:new Date("2024-01-01"),updated_at:new Date},subscription:null,availableAccountTypes:[{type:"free",name:"Free",description:"Full social functionality",current:!0,canSwitchTo:!1},{type:"professional",name:"Professional",description:"Dual identity management",current:!1,canSwitchTo:!0},{type:"venue",name:"Venue & Business",description:"Business profile and analytics",current:!1,canSwitchTo:!0}],adminPrivileges:{canOverrideAccountType:!0,canBypassPayment:!0,canAccessAllFeatures:!0,lastOverrideAction:null}};return u.NextResponse.json({success:!0,data:i,isAdmin:!0,adminUserId:d?parseInt(d):0})}catch(a){return console.error("❌ ADMIN OVERRIDE API: Error getting account status:",a),u.NextResponse.json({success:!1,error:"Failed to get account status"},{status:500})}}async function y(a){try{console.log("\uD83D\uDD04 ADMIN OVERRIDE: Resetting account to free");let{searchParams:b}=new URL(a.url),c=b.get("userId"),d=a.headers.get("x-user-id");if(!c)return u.NextResponse.json({success:!1,error:"User ID is required"},{status:400});console.log("\uD83D\uDD04 ADMIN OVERRIDE: Resetting user",c,"to free account");let e={id:parseInt(c),account_type:"free",subscription_status:"none",stripe_customer_id:null,updated_at:new Date};return u.NextResponse.json({success:!0,message:"Account reset to free successfully",user:e,adminAction:{performedBy:d?parseInt(d):0,targetUser:parseInt(c),action:"account_reset_to_free",timestamp:new Date}})}catch(a){return console.error("❌ ADMIN OVERRIDE API: Error resetting account:",a),u.NextResponse.json({success:!1,error:"Failed to reset account"},{status:500})}}let z=new e.AppRouteRouteModule({definition:{kind:f.RouteKind.APP_ROUTE,page:"/api/admin/account-override/route",pathname:"/api/admin/account-override",filename:"route",bundlePath:"app/api/admin/account-override/route"},distDir:".next",projectDir:"",resolvedPagePath:"C:\\Users\\hemin\\Local Files\\Desktop\\Scoop\\Static HTML Scoop\\app\\api\\admin\\account-override\\route.ts",nextConfigOutput:"",userland:d}),{workAsyncStorage:A,workUnitAsyncStorage:B,serverHooks:C}=z;function D(){return(0,g.patchFetch)({workAsyncStorage:A,workUnitAsyncStorage:B})}async function E(a,b,c){var d;let e="/api/admin/account-override/route";"/index"===e&&(e="/");let g=await z.prepare(a,b,{srcPage:e,multiZoneDraftMode:"false"});if(!g)return b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve()),null;let{buildId:u,params:v,nextConfig:w,isDraftMode:x,prerenderManifest:y,routerServerContext:A,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,resolvedPathname:D}=g,E=(0,j.normalizeAppPath)(e),F=!!(y.dynamicRoutes[E]||y.routes[D]);if(F&&!x){let a=!!y.routes[D],b=y.dynamicRoutes[E];if(b&&!1===b.fallback&&!a)throw new s.NoFallbackError}let G=null;!F||z.isDev||x||(G="/index"===(G=D)?"/":G);let H=!0===z.isDev||!F,I=F&&!H,J=a.method||"GET",K=(0,i.getTracer)(),L=K.getActiveScopeSpan(),M={params:v,prerenderManifest:y,renderOpts:{experimental:{dynamicIO:!!w.experimental.dynamicIO,authInterrupts:!!w.experimental.authInterrupts},supportsDynamicResponse:H,incrementalCache:(0,h.getRequestMeta)(a,"incrementalCache"),cacheLifeProfiles:null==(d=w.experimental)?void 0:d.cacheLife,isRevalidate:I,waitUntil:c.waitUntil,onClose:a=>{b.on("close",a)},onAfterTaskError:void 0,onInstrumentationRequestError:(b,c,d)=>z.onRequestError(a,b,d,A)},sharedContext:{buildId:u}},N=new k.NodeNextRequest(a),O=new k.NodeNextResponse(b),P=l.NextRequestAdapter.fromNodeNextRequest(N,(0,l.signalFromNodeResponse)(b));try{let d=async c=>z.handle(P,M).finally(()=>{if(!c)return;c.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let d=K.getRootSpanAttributes();if(!d)return;if(d.get("next.span_type")!==m.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${d.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let e=d.get("next.route");if(e){let a=`${J} ${e}`;c.setAttributes({"next.route":e,"http.route":e,"next.span_name":a}),c.updateName(a)}else c.updateName(`${J} ${a.url}`)}),g=async g=>{var i,j;let k=async({previousCacheEntry:f})=>{try{if(!(0,h.getRequestMeta)(a,"minimalMode")&&B&&C&&!f)return b.statusCode=404,b.setHeader("x-nextjs-cache","REVALIDATED"),b.end("This page could not be found"),null;let e=await d(g);a.fetchMetrics=M.renderOpts.fetchMetrics;let i=M.renderOpts.pendingWaitUntil;i&&c.waitUntil&&(c.waitUntil(i),i=void 0);let j=M.renderOpts.collectedTags;if(!F)return await (0,o.I)(N,O,e,M.renderOpts.pendingWaitUntil),null;{let a=await e.blob(),b=(0,p.toNodeOutgoingHttpHeaders)(e.headers);j&&(b[r.NEXT_CACHE_TAGS_HEADER]=j),!b["content-type"]&&a.type&&(b["content-type"]=a.type);let c=void 0!==M.renderOpts.collectedRevalidate&&!(M.renderOpts.collectedRevalidate>=r.INFINITE_CACHE)&&M.renderOpts.collectedRevalidate,d=void 0===M.renderOpts.collectedExpire||M.renderOpts.collectedExpire>=r.INFINITE_CACHE?void 0:M.renderOpts.collectedExpire;return{value:{kind:t.CachedRouteKind.APP_ROUTE,status:e.status,body:Buffer.from(await a.arrayBuffer()),headers:b},cacheControl:{revalidate:c,expire:d}}}}catch(b){throw(null==f?void 0:f.isStale)&&await z.onRequestError(a,b,{routerKind:"App Router",routePath:e,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})},A),b}},l=await z.handleResponse({req:a,nextConfig:w,cacheKey:G,routeKind:f.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:y,isRoutePPREnabled:!1,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,responseGenerator:k,waitUntil:c.waitUntil});if(!F)return null;if((null==l||null==(i=l.value)?void 0:i.kind)!==t.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==l||null==(j=l.value)?void 0:j.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,h.getRequestMeta)(a,"minimalMode")||b.setHeader("x-nextjs-cache",B?"REVALIDATED":l.isMiss?"MISS":l.isStale?"STALE":"HIT"),x&&b.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let m=(0,p.fromNodeOutgoingHttpHeaders)(l.value.headers);return(0,h.getRequestMeta)(a,"minimalMode")&&F||m.delete(r.NEXT_CACHE_TAGS_HEADER),!l.cacheControl||b.getHeader("Cache-Control")||m.get("Cache-Control")||m.set("Cache-Control",(0,q.getCacheControlHeader)(l.cacheControl)),await (0,o.I)(N,O,new Response(l.value.body,{headers:m,status:l.value.status||200})),null};L?await g(L):await K.withPropagatedContext(a.headers,()=>K.trace(m.BaseServerSpan.handleRequest,{spanName:`${J} ${a.url}`,kind:i.SpanKind.SERVER,attributes:{"http.method":J,"http.target":a.url}},g))}catch(b){if(L||b instanceof s.NoFallbackError||await z.onRequestError(a,b,{routerKind:"App Router",routePath:E,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})}),F)throw b;return await (0,o.I)(N,O,new Response(null,{status:500})),null}}},10846:a=>{"use strict";a.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29294:a=>{"use strict";a.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:a=>{"use strict";a.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},61514:(a,b,c)=>{"use strict";c.d(b,{PR:()=>e,Pr:()=>f});let d=new Map;function e(a){let b=d.get(a);return b?{account_type:b.account_type,subscription_status:b.subscription_status}:null}function f(a,b){let c={account_type:b,subscription_status:"free"===b?"none":"active",updated_at:new Date};d.set(a,c),console.log("\uD83D\uDCBE ADMIN OVERRIDE: Stored override for user",a,":",c)}},63033:a=>{"use strict";a.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},86439:a=>{"use strict";a.exports=require("next/dist/shared/lib/no-fallback-error.external")},96487:()=>{}};var b=require("../../../../webpack-runtime.js");b.C(a);var c=b.X(0,[4985,6055],()=>b(b.s=7015));module.exports=c})();